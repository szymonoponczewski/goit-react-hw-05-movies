{"version":3,"file":"static/js/38.689db6f9.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst MovieList = ({ movies, navigate }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map((movie) => (\n        <li key={movie.id}>\n          <Link to={`${navigate}${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n  navigate: PropTypes.string.isRequired,\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieSearchForm\":\"MovieSearch_movieSearchForm__XhrkB\",\"movieSearchInput\":\"MovieSearch_movieSearchInput__DdSwx\",\"movieSearchButton\":\"MovieSearch_movieSearchButton__2wqvj\"};","import PropTypes from \"prop-types\";\nimport css from \"./MovieSearch.module.css\";\n\nconst MovieSearch = ({ onSubmit }) => (\n  <form className={css.movieSearchForm} onSubmit={onSubmit}>\n    <input className={css.movieSearchInput} type=\"text\" name=\"query\" required />\n    <button className={css.movieSearchButton} type=\"submit\">\n      Search\n    </button>\n  </form>\n);\n\nMovieSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieSearch;\n","import MovieSearch from \"../../components/MovieSearch/MovieSearch\";\nimport MovieList from \"../../components/MovieList/MovieList\";\nimport { searchMovies } from \"../../services/api\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesList, setMoviesList] = useState([]);\n  const query = searchParams.get(\"query\") || \"\";\n\n  useEffect(() => {\n    const fetchMoviesList = async () => {\n      try {\n        const movies = await searchMovies(query);\n        setMoviesList(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMoviesList();\n  }, [query]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.target;\n    const newQuery = form.elements.query.value;\n    setSearchParams({ query: newQuery });\n    form.reset();\n  };\n\n  return (\n    <>\n      <MovieSearch onSubmit={handleSubmit} />\n      <MovieList movies={moviesList} navigate=\"\" />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\nexport const API_KEY = \"9cd3003f00fa34df086a65205d0cd538\";\n\nexport const fetchMovies = async () => {\n  const response = await axios.get(\n    \"https://api.themoviedb.org/3/trending/movie/day\",\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return response.data.results;\n};\n\nexport const searchMovies = async (query) => {\n  const search = await axios.get(\"https://api.themoviedb.org/3/search/movie\", {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  });\n\n  return search.data.results;\n};\n\nexport const getMovieDetails = async (id) => {\n  const movieById = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return movieById.data;\n};\n\nexport const getReviews = async (movieId) => {\n  const reviews = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return reviews.data.results;\n};\n\nexport const getCast = async (movieId) => {\n  const cast = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n    {\n      params: {\n        api_key: API_KEY,\n      },\n    }\n  );\n\n  return cast.data.cast;\n};\n"],"names":["_ref","movies","navigate","location","useLocation","_jsx","children","map","movie","Link","to","concat","id","state","from","title","onSubmit","_jsxs","className","css","type","name","required","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","moviesList","setMoviesList","query","get","useEffect","fetchMoviesList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","searchMovies","sent","t0","console","log","stop","apply","arguments","_Fragment","MovieSearch","event","preventDefault","form","target","newQuery","elements","value","reset","MovieList","API_KEY","fetchMovies","response","axios","params","api_key","abrupt","data","results","_ref2","_callee2","search","_context2","_x","getMovieDetails","_ref3","_callee3","movieById","_context3","_x2","getReviews","_ref4","_callee4","movieId","reviews","_context4","_x3","getCast","_ref5","_callee5","cast","_context5","_x4"],"sourceRoot":""}